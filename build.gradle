buildscript {
    ext.kotlin_version = "1.7.20"

    repositories {
        mavenCentral()
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version "$kotlin_version"
}

group 'ru.barabo'

tasks.withType(JavaExec) {
    jvmArgs = ['-Xmx2g']
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'kotlin'

sourceCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()

    maven { url 'https://jitpack.io' }
}

dependencies {

    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: "$kotlin_version"

    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: "$kotlin_version"

    testImplementation group: 'junit', name: 'junit', version: '4.12'

    implementation group: 'org.aeonbits.owner', name: 'owner', version: '1.0.10'
    implementation group: 'org.aeonbits.owner', name: 'owner-java8', version: '1.0.10'

    implementation group: 'org.swinglabs.swingx', name: 'swingx-all', version: '1.6.5-1'

    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.+'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.11'

    implementation group: 'log4j', name: 'log4j', version: '1.2.17'

    implementation group: 'net.sourceforge.jexcelapi', name: 'jxl', version: '2.6.12'

    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.2'

    implementation group: 'com.oracle.database.jdbc', name: 'ojdbc6', version: '11.2.0.4'

    implementation group: 'com.github.dbarabo', name: 'dbjdb', version: '0.9.6'

    implementation group: 'com.github.dbarabo', name: 'xlsx', version: '0.9.17'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"

    kotlinOptions {
        languageVersion = "1.7"
    }
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jar {

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes 'Main-Class': 'ru.barabo.statement.main.StatementKt'
    }

    from configurations.runtimeClasspath.collect  {
        it.isDirectory() ? it : zipTree(it).matching {
            exclude {
                it.name.contains('.DSA') ||
                        it.name.contains('.SF') ||
                        it.name.contains('.RSA')
            }
        }
    }
}
